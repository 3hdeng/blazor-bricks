@page "/"
        <div class="screen">
            <div class="centerPanel">
                <div class="board">
                    @foreach (var brick in boardViewModel.Bricks)
                    {
                        <span class="colorChip" style="background-color:@(brick.Color);"></span>
                    }
                </div>
                <div class="scorePanel">
                    <div>
                        Score
                    </div>
                    <div id="divScore" class="scoreText">000000</div>
                    <br />
                    <div>
                        HiScore
                    </div>
                    <div id="divHiScore" class="scoreText">000000</div>
                    <br />
                    <div>
                        Lines
                    </div>
                    <div id="divLines" class="scoreText">0</div>
                    <br />
                    <div>
                        Level
                    </div>
                    <div id="divLevel" class="scoreText">0</div>
                    <br />
                    <div>
                        Next
                    </div>
                    <div id="divNext" class="scoreText"></div>

                </div>
            </div>
            <div id="gamePaused">
                GAME PAUSED<br />
                Press SPACE to continue!
            </div>
        </div>
<div id="gameOver">
    GAME OVER<br />
    Press SPACE to restart!
</div>

<p>@(boardViewModel.Bricks.Count())</p>
<p>@(boardViewModel.Bricks.Count())</p>

@functions {
    BlazorBricks.Core.BoardViewModel boardViewModel;

    protected override async Task OnInitAsync()
    {
        boardViewModel = BlazorBricks.Core.GameManager.Instance.CurrentBoard;

        await Task.Run(async () =>
        {
            while (true)
            {
                await Task.Delay(500);
                BlazorBricks.Core.GameManager.Instance.Presenter.Tick();
                boardViewModel = BlazorBricks.Core.GameManager.Instance.CurrentBoard;
                this.StateHasChanged();
            }
        });
    }
}
